{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserApi(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [user, setUser] = useState('');\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/api/user/getUser', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          setUser(res.data._id);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('api/user/addcart', {\n        user: user,\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    user: [user, setUser] // history: [history, setHistory]\n\n  };\n}\n\n_s(UserApi, \"ajHeEsfzibMX4vvbl3vLK2pCKEI=\");\n\n_c = UserApi;\nexport default UserApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserApi\");","map":{"version":3,"sources":["C:/Users/i7/Desktop/ReactWeb/client/src/api/UserApi.js"],"names":["useState","useEffect","axios","UserApi","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","user","setUser","history","setHistory","getUser","res","get","headers","Authorization","data","_id","role","err","alert","response","msg","addCart","product","check","every","item","quantity","patch"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserApi(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([])\r\n    const [user, setUser] =useState('')\r\n    const [history, setHistory] = useState([])\r\n\r\n    useEffect(() =>{\r\n        if(token){\r\n            const getUser = async () =>{\r\n                try {\r\n                    const res = await axios.get('/api/user/getUser', {\r\n                        headers: {Authorization: token}\r\n                    })\r\n                    setIsLogged(true)\r\n                    setUser(res.data._id)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n                    setCart(res.data.cart)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n            \r\n        }\r\n    },[token])\r\n\r\n    \r\n\r\n    const addCart = async (product) => {\r\n        if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n        const check = cart.every(item =>{\r\n            return item._id !== product._id\r\n        })\r\n\r\n        if(check){\r\n            setCart([...cart, {...product, quantity: 1}])\r\n\r\n            await axios.patch('api/user/addcart', {user:user, cart: [...cart, {...product, quantity: 1}]}, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n\r\n        }else{\r\n            alert(\"This product has been added to cart.\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        cart: [cart, setCart],\r\n        addCart: addCart,\r\n        user : [user, setUser]\r\n        // history: [history, setHistory]\r\n    }\r\n}\r\n\r\nexport default UserApi"]},"metadata":{},"sourceType":"module"}